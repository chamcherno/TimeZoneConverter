// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeZoneConverter.Models;

#nullable disable

namespace TimeZoneConverter.Migrations
{
    [DbContext(typeof(WheelCopyContext))]
    partial class WheelCopyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeZoneConverter.Models.AgeGroup", b =>
                {
                    b.Property<string>("AgeGroup1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AgeGroup");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.ToTable("AgeGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AspNetRole", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IncludeInAverage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRenameable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AspNetUser", b =>
                {
                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("AllowQuickUpdating")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowStudentCreation")
                        .HasColumnType("bit");

                    b.Property<string>("AppAuthenticationKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("CurrentConnectionId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EnableMfaDueDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("EnableNotifications")
                        .HasColumnType("bit");

                    b.Property<bool>("EnableTimeout")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsAppAuthenticationEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastActive")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastViewedNotifications")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("OldPasswordHash")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherNames")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PasswordPrompt")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImageUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProfileImageURL");

                    b.Property<DateTime?>("ResetPasswordDueDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimesLoggedIn")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AspNetUserClaim", b =>
                {
                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AspNetUserRole", b =>
                {
                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserRoleId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AspNetUsersPending", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherNames")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProfileImageURL");

                    b.Property<string>("ProfileImageUrlsmall")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("ProfileImageURLSmall");

                    b.Property<string>("RequestId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.ToTable("AspNetUsersPending", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Assessment", b =>
                {
                    b.Property<long>("AssessmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssessorId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Collation")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("GroupAssessedId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<long?>("OldAssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserAssessedId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AssessmentComment", b =>
                {
                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssessorId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Comment")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long?>("GroupAssessedId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("UserAssessedId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("AssessmentComments");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AssessmentType", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.ToTable("AssessmentTypes");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.AttachmentType", b =>
                {
                    b.Property<string>("AttachmentType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("attachmentType");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.ToTable("AttachmentTypes");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockEvidence", b =>
                {
                    b.Property<long?>("BlockId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldBlockEvidenceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Statement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("BlockEvidence", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockEvidenceAttachment", b =>
                {
                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("AttachmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long?>("EvidenceId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldBlockEvidenceAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebPathRelative")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.ToTable("BlockEvidenceAttachment", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockExample", b =>
                {
                    b.Property<long?>("BlockId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LevelInfo")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long?>("OldBlockExampleId")
                        .HasColumnType("bigint")
                        .HasColumnName("OldBlockExampleID");

                    b.Property<long?>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("BlockExamples");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockExampleAttachment", b =>
                {
                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("AttachmentType")
                        .HasColumnType("bigint");

                    b.Property<long>("BlockExampleId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockExampleID");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("OldBlockExampleId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.ToTable("BlockExampleAttachments");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockExampleAttachmentGroup", b =>
                {
                    b.Property<long>("BlockExampleAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("BlockExampleAttachmentGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockLevelInfo", b =>
                {
                    b.Property<long>("BlockId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("LevelInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrgId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("BlockLevelInfo", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockLevelInfoGroup", b =>
                {
                    b.Property<long?>("BlockLevelInfoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.ToTable("BlockLevelInfoGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockOptionEvidence", b =>
                {
                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BlockId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BlockOptionId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Complete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("BlockOptionEvidence", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.BlockScore", b =>
                {
                    b.Property<string>("ColourHex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Scorable")
                        .HasColumnType("bit");

                    b.ToTable("BlockScores");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.CategoriesForOrganisation", b =>
                {
                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.ToTable("CategoriesForOrganisations");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.CategoriesForWheel", b =>
                {
                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.ToTable("CategoriesForWheels");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DatesOfInterest", b =>
                {
                    b.Property<DateTime>("DateOfInterest")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("DatesOfInterest", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedBlock", b =>
                {
                    b.Property<long?>("AgeGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Body")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LevelInfo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<long?>("OldBlockId")
                        .HasColumnType("bigint");

                    b.Property<short?>("Position")
                        .HasColumnType("smallint");

                    b.Property<long>("SubSectorId")
                        .HasColumnType("bigint");

                    b.ToTable("DefinedBlocks");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedBlocksAttachment", b =>
                {
                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AttachmentPosition")
                        .HasColumnType("int");

                    b.Property<long>("AttatchmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OldBlockAttachmentId")
                        .HasColumnType("int");

                    b.Property<string>("WebPathRelative")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("WheelBlockId")
                        .HasColumnType("bigint");

                    b.ToTable("DefinedBlocksAttachments");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedBlocksOption", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("StatementOption")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long>("WheelBlockId")
                        .HasColumnType("bigint");

                    b.ToTable("DefinedBlocksOptions");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedSector", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("OldSectorId")
                        .HasColumnType("bigint");

                    b.Property<long>("SectorColour")
                        .HasColumnType("bigint");

                    b.Property<string>("SectorLabel")
                        .HasMaxLength(175)
                        .HasColumnType("nvarchar(175)");

                    b.Property<long?>("SectorPosition")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("DefinedSectors");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedSubSector", b =>
                {
                    b.Property<long?>("Colour")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasMaxLength(175)
                        .IsUnicode(false)
                        .HasColumnType("varchar(175)");

                    b.Property<string>("OldSubSectorId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<long?>("Position")
                        .HasColumnType("bigint");

                    b.Property<long>("SectorId")
                        .HasColumnType("bigint");

                    b.ToTable("DefinedSubSectors");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedWheel", b =>
                {
                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescriptionHTML");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsJasmine")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEdited")
                        .HasColumnType("datetime");

                    b.Property<string>("LogoFileName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("OldWheelId")
                        .HasColumnType("bigint");

                    b.Property<int>("StartingLevel")
                        .HasColumnType("int");

                    b.ToTable("DefinedWheels");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DefinedWheelStageIndicator", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("StageLevel")
                        .HasColumnType("int");

                    b.Property<string>("ToolTipText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TooltipTitle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("DefinedWheelStageIndicator", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DemoExpiryNotification", b =>
                {
                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.ToTable("DemoExpiryNotifications");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DemoExpiryNotificationStatus", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.ToTable("DemoExpiryNotificationStatus", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.DemoSignup", b =>
                {
                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasMaxLength(258)
                        .IsUnicode(false)
                        .HasColumnType("varchar(258)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(258)
                        .IsUnicode(false)
                        .HasColumnType("varchar(258)");

                    b.Property<string>("AdminPhone")
                        .HasMaxLength(258)
                        .IsUnicode(false)
                        .HasColumnType("varchar(258)");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasMaxLength(258)
                        .IsUnicode(false)
                        .HasColumnType("varchar(258)");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrganisationName")
                        .IsRequired()
                        .HasMaxLength(258)
                        .IsUnicode(false)
                        .HasColumnType("varchar(258)");

                    b.ToTable("DemoSignups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.ExistingBlockState", b =>
                {
                    b.Property<long>("BlockId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BlockScore")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldBlockStateId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("ExistingBlockStates");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Font", b =>
                {
                    b.Property<string>("FontFamilyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FontFormat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("FontId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Font_Id");

                    b.Property<string>("FontUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToTable("Font", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.GlobalCentralFile", b =>
                {
                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AttachmentPosition")
                        .HasColumnType("int");

                    b.Property<long>("AttachmentType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("WebPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("GlobalCentralFiles");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Group", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("GlobalGroup")
                        .HasColumnType("bit");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("OldGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.GroupMember", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupMemberId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("GroupMembers");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.HistoricalBlockState", b =>
                {
                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint");

                    b.Property<long?>("BlockScore")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldBlockStateId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("HistoricalBlockStates");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.LockedUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("LockedUsers");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Note", b =>
                {
                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note1")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("Note");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Notification", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long?>("GroupRecieverId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("RecieverId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("SoftRead")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.NotificationTemplate", b =>
                {
                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NotificationTemplateId")
                        .HasColumnType("bigint")
                        .HasColumnName("NotificationTemplate_Id");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.ToTable("NotificationTemplates");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.NotificationType", b =>
                {
                    b.Property<string>("FontAwesomeClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("NotificationTypes");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrgAssessmentAlias", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewAssessmentAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrgAssessmentAliases");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrgGroupAlias", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewGroupAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrgGroupAliases");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrgLevelAlias", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewLevelAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrgLevelAliases");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrgProgressionAlias", b =>
                {
                    b.Property<string>("CompletedAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PartialAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrgProgressionAliases");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrgRoleAlias", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrgRoleAliases");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrgWheelAlias", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewWheelAlias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrgWheelAliases");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Organisation", b =>
                {
                    b.Property<Guid?>("BulkImportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompleteColour")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("DemoExpired")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DemoExpiry")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DomainUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DomainURL");

                    b.Property<Guid?>("FontId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Font_Id");

                    b.Property<string>("Information")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDemo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsJasmine")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnType("datetime");

                    b.Property<string>("OldOrgUrn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OldOrgURN");

                    b.Property<bool>("OnHold")
                        .HasColumnType("bit");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PartialColour")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("PhoneContact")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PostCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ScoreShowStudent")
                        .HasColumnType("bit");

                    b.Property<long>("ScoreType")
                        .HasColumnType("bigint");

                    b.Property<bool>("SupportEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TargetColour")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("ThemeColour")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<Guid?>("ThemeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Theme_Id");

                    b.Property<string>("Urn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("URN");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("OrganisationCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SubCategoryId")
                        .HasColumnType("bigint");

                    b.ToTable("OrganisationCategories");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationCentralFile", b =>
                {
                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("AttachmentType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable("OrganisationCentralFiles");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationLogo", b =>
                {
                    b.Property<long>("AttachmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.ToTable("OrganisationLogos");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationPredefinedMessage", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.ToTable("OrganisationPredefinedMessages");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationProfilePicture", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmall")
                        .HasColumnType("bit");

                    b.Property<string>("LinkToImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.ToTable("OrganisationProfilePictures");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationWheelDescription", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DescriptionHtml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DescriptionHTML");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("OrganisationWheelDescriptions");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.OrganisationWheelDescriptionGroup", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("WheelDescriptionId")
                        .HasColumnType("bigint");

                    b.ToTable("OrganisationWheelDescriptionGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.S3queue", b =>
                {
                    b.Property<string>("AwsKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BucketName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FilePathAlt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ImportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("OldBlockAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldCentralEvidenceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldCentralExampleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldEvidenceId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OldExampleId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long>("S3queueId")
                        .HasColumnType("bigint")
                        .HasColumnName("S3QueueId");

                    b.Property<string>("Status")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("S3Queue", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.S3tempFile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentID");

                    b.Property<string>("S3path")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("S3Path");

                    b.ToTable("S3TempFiles", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.S3tempFileParent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("S3TempFileParents", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.ScoreType", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ScoreType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ScoreType");

                    b.ToTable("ScoreTypes");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.SiteErrorLog", b =>
                {
                    b.Property<string>("Contenttype")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("contenttype");

                    b.Property<DateTime?>("DateRecorded")
                        .HasColumnType("datetime");

                    b.Property<string>("Httpmethod")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("httpmethod");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<string>("InnerExceptionMessage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("innerExceptionMessage");

                    b.Property<string>("InnerExceptionStackTrace")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("innerExceptionStackTrace");

                    b.Property<string>("InnerExceptionType")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("innerExceptionType");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("message");

                    b.Property<string>("Origin")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("origin");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stackTrace");

                    b.Property<string>("Statuscode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("statuscode");

                    b.Property<string>("TargetSite")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("targetSite");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("type");

                    b.Property<string>("Useragent")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("useragent");

                    b.Property<string>("Userhostip")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("userhostip");

                    b.Property<Guid?>("Userid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("userid");

                    b.ToTable("SiteErrorLogs");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.SubCategoriesForOrganisation", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("SubCategoriesForOrganisations");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.SubCategoriesForWheel", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("SubCategoriesForWheels");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.Theme", b =>
                {
                    b.Property<Guid>("ThemeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Theme_Id");

                    b.Property<string>("ThemeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Theme", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.UserConnection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("UserConnections");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.UserGroup", b =>
                {
                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.UserLocation", b =>
                {
                    b.Property<string>("Coordinates")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(900)
                        .HasColumnType("nvarchar(900)");

                    b.ToTable("UserLocation", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.UserProfilePicture", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSmall")
                        .HasColumnType("bit");

                    b.Property<string>("LinkToImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.ToTable("UserProfilePictures");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.UserWheelLevelExclusion", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.Property<int?>("WheelLevel")
                        .HasColumnType("int");

                    b.ToTable("UserWheelLevelExclusions");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelAssessment", b =>
                {
                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("UpdateAnyBlock")
                        .HasColumnType("bit");

                    b.Property<string>("UpdaterUserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelAssessments");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelAssessmentsCurrent", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("UpdateAnyBlock")
                        .HasColumnType("bit");

                    b.Property<string>("UpdaterUserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelAssessmentsCurrent", (string)null);
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelCategory", b =>
                {
                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("SubCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelCategories");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelExcelExport", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("S3link")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("S3Link");

                    b.Property<string>("S3parentFolderGuid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("S3ParentFolderGUID");

                    b.ToTable("WheelExcelExports");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelGroup", b =>
                {
                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<long>("WheelGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelGroupCompletionEvent", b =>
                {
                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("File")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("GroupCompletionEventId")
                        .HasColumnType("bigint");

                    b.Property<long?>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("Message")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long?>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelGroupCompletionEvents");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelOrgEvidenceCentralFile", b =>
                {
                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("AttachmentType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("OldBlockEvidenceAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelOrgEvidenceCentralFiles");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelOrgExampleCentralFile", b =>
                {
                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AttachmentName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("AttachmentType")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("OldBlockExampleAttachmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebPath")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelOrgExampleCentralFiles");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelOrgExampleCentralFileGroup", b =>
                {
                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<long>("WheelOrgExampleCentralFilesId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelOrgExampleCentralFileGroups");
                });

            modelBuilder.Entity("TimeZoneConverter.Models.WheelOrganisation", b =>
                {
                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("OrganisationId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelId")
                        .HasColumnType("bigint");

                    b.Property<long>("WheelOrganisationId")
                        .HasColumnType("bigint");

                    b.ToTable("WheelOrganisations");
                });
#pragma warning restore 612, 618
        }
    }
}
